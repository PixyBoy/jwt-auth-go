version: "3.9"

networks:
  appnet:
    name: jwt_auth_net

services:
  api:
    build:
      context: ..
      dockerfile: infra/server/Dockerfile
      args:
        - GO_VERSION=${GO_VERSION}
    command: air
    volumes:
      - ./../src:/app/src
    env_file:
      - ./../src/.env
      - ./.env
    depends_on:
      - mysql
      - redis
    ports:
      - "${API_PORT}:8080"
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -sf http://localhost:8080/healthz >/dev/null"]
    networks: [appnet]

  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: go-mysql
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-p ${MYSQL_ROOT_PASSWORD}"]
    networks: [appnet]

  phpmyadmin:
    image: phpmyadmin:${PHPMYADMIN_VERSION}
    container_name: go-phpmyadmin
    restart: always
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      PMA_ARBITRARY: 1
    depends_on:
      - mysql
    ports:
      - "${PHPMYADMIN_PORT}:80"
    networks: [appnet]

  redis:
    image: redis:${REDIS_VERSION}
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    networks: [appnet]

volumes:
  mysql_data:
  redis_data:
